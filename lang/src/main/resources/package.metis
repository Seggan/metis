let global package = {}

package.path = ["./"]
package.loaded = []

fn package.path_loader(module)
    let p = module:replace(".", path.separator) + ".metis"
    for dir in package.path
        let filename = path.resolve(dir, p)
        if not path.is_absolute(filename)
            filename = path.resolve(os.cwd, filename)
        end
        if path.exists(filename)
            let text = path.read_text(filename)
            let chunk = load_chunk(path.base_name(filename), text)
            return chunk
        end
    end
    return null
end

package.loaders = [package.path_loader]

global fn require(module)
    for loader in package.loaders
        let chunk = loader(module)
        if chunk is not null
            let result = chunk()
            package.loaded[module] = result
            return result
        end
    end
    raise error ModuleNotFoundError(module)
end