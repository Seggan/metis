fn list.__str__(self)
    let sb = string.builder()
    sb.append("[")
    for v in self
        if v is self
            sb.append("[...]")
        else
            sb.append(v)
        end
        sb.append(", ")
    end
    sb.deleteLast(2)
    return str(sb.append("]"))
end

fn list.join(self, sep)
    let sb = string.builder()
    for v in self
        sb.append(v).append(sep)
    end
    sb.deleteLast(len(sep))
    return str(sb)
end

fn list.reverse(self)
    let result = list.new(len(self))
    for i in range.inclusive(len(self) - 1, 0, -1)
        result.append(self[i])
    end
    return result
end

fn list.clone(self)
    let result = list.new(len(self))
    for v in self
        result.append(v)
    end
    return result
end

fn list.__plus__(self, value)
    let new = self.clone()
    if type(value) == "list"
        for v in value
            new.append(v)
        end
    else
        new.append(value)
    end
    return new
end

list.metatable = collection
bytes.metatable = collection