do
    let sbMeta = string.builder().metatable
    fn sbMeta.append(self, value) = self.__append(str(value))
    fn sbMeta.deleteLast(self, n)
        let length = self.size()
        self.delete(length - n, length)
        return self
    end
    # THIS GOES LAST
    fn sbMeta.__set__(self, index, value) = self.__set(self, index, str(value))
end

fn string.charCode(self) = self.encode("UTF-8")[0]

fn string.repeat(self, n)
    let sb = string.builder(self.size() * n)
    for _ in 0..<n
        sb.append(self)
    end
    return str(sb)
end

fn string.reversed(self)
    let sb = string.builder(self.size())
    for i in range.inclusive(self.size() - 1, 0, -1)
        sb.append(self[i])
    end
    return str(sb)
end

fn string.strip(self) = self.stripLeft().stripRight()

fn string.stripLeft(self)
    let i = 0
    while i < self.size() and self[i].isWhitespace()
        i += 1
    end
    return self.sub(i)
end

fn string.stripRight(self)
    let i = self.size() - 1
    while i >= 0 and self[i].isWhitespace()
        i -= 1
    end
    return self.sub(0, i + 1)
end

string.metatable = collection