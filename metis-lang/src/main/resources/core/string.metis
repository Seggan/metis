do
    let sbMeta = string.builder().metatable
    fn sbMeta.append(self, value) = self.__append(str(value))
    fn sbMeta.deleteLast(self, n)
        let length = len(self)
        self.delete(length - n, length)
        return self
    end
    # THIS GOES LAST
    fn sbMeta.__set__(self, index, value) = self.__set(self, index, str(value))
end

fn string.charCode(self) = self.encode("UTF-8")[0]

fn string.repeat(self, n)
    let sb = string.builder(len(self) * n)
    for _ in 0..<n
        sb.append(self)
    end
    return str(sb)
end

fn string.reverse(self)
    let sb = string.builder(len(self))
    for i in range.inclusive(len(self) - 1, 0, -1)
        sb.append(self[i])
    end
    return str(sb)
end

fn string.strip(self) = self.stripLeft().stripRight()

fn string.stripLeft(self)
    let i = 0
    while i < len(self) and self[i].isWhitespace()
        i += 1
    end
    return self.sub(i)
end

fn string.stripRight(self)
    let i = len(self) - 1
    while i >= 0 and self[i].isWhitespace()
        i -= 1
    end
    return self.sub(0, i + 1)
end

string.metatable = collection